name: Post to Mastodon

on:
  push:
    branches:
      - main

jobs:
  post_to_mastodon:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get latest commit time
      id: get_commit_time
      run: |
        # Get the timestamp of the latest commit
        COMMIT_TIME=$(git log -1 --format=%ct)
        echo "COMMIT_TIME=$COMMIT_TIME" >> $GITHUB_ENV

    - name: Find posts with Mastodon flag and valid date
      id: find_flagged_posts
      run: |
        # Find all posts with 'post_to_mastodon: true' recursively
        FLAGGED_POSTS=$(grep -rl '^post_to_mastodon: true' _posts)
        
        if [ -z "$FLAGGED_POSTS" ]; then
          echo "No posts flagged for Mastodon. Exiting."
          exit 0
        fi

        # Filter posts based on the date and commit time
        POST_URLS=""
        for POST in $FLAGGED_POSTS; do
          # Extract the post date (assumes YYYY-MM-DD in filename)
          POST_DATE=$(basename "$POST" | cut -d'-' -f1-3)
          POST_TIMESTAMP=$(date -d "$POST_DATE" +%s)

          if [ "$POST_TIMESTAMP" -ge "$COMMIT_TIME" ]; then
            URL="https://your-jekyll-site.com/$(basename ${POST%.*}).html"
            POST_URLS+="$URL"$'\n'
          fi
        done

        if [ -z "$POST_URLS" ]; then
          echo "No posts with valid dates found. Exiting."
          exit 0
        fi

        echo "POST_URLS=$POST_URLS" >> $GITHUB_ENV

    - name: Post to Mastodon
      if: env.POST_URLS != ''
      run: |
        for URL in $(echo $POST_URLS); do
          curl -X POST -H "Authorization: Bearer ${{ secrets.MASTODON_ACCESS_TOKEN }}" \
               -F "status=Check out my latest blog post: $URL" \
               https://mastodon.social/api/v1/statuses
        done
